user  nginx;
worker_processes  auto;

events { worker_connections 1024; }

# ===== RustDesk ports via stream (TCP/UDP) =====
stream {
  # Access/Error log for stream (TCP/UDP)
  log_format strm '$remote_addr:$remote_port -> $server_addr:$server_port '
                  '[$protocol] status=$status bytes=$bytes_sent';
  access_log /var/log/nginx/stream_access.log strm;
  error_log  /var/log/nginx/stream_error.log info;

  # hbbs (ID/Signal)
  server { listen 21115;      proxy_pass hbbs:21115; proxy_connect_timeout 3s; proxy_timeout 120s; }
  server { listen 21116;      proxy_pass hbbs:21116; proxy_connect_timeout 3s; proxy_timeout 120s; }
  server { listen 21116 udp;  proxy_pass hbbs:21116; }
  server { listen 21118;      proxy_pass hbbs:21118; proxy_connect_timeout 3s; proxy_timeout 120s; }

  # hbbr (Relay)
  server { listen 21117;      proxy_pass hbbr:21117; proxy_connect_timeout 3s; proxy_timeout 120s; }
  server { listen 21119;      proxy_pass hbbr:21119; proxy_connect_timeout 3s; proxy_timeout 120s; }
}

http {
  include       mime.types;
  default_type  application/octet-stream;
  sendfile on;
  keepalive_timeout 65;

  # Access/Error log for HTTP
  log_format main '$remote_addr - $remote_user [$time_local] '
                  '"$request" $status $body_bytes_sent '
                  '"$http_referer" "$http_user_agent" "$http_x_forwarded_for"';
  access_log /var/log/nginx/access.log main;
  error_log  /var/log/nginx/error.log warn;

  server {
    listen 80;
    listen [::]:80;
    server_name remote.etadbir.com;
    return 301 https://$host$request_uri;
  }

  server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name remote.etadbir.com;

    ssl_certificate     /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/private.key;

    ssl_session_timeout 1d;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    add_header Strict-Transport-Security "max-age=31536000" always;

    root /usr/share/nginx/html;
    index index.html;

    # WebSocket to hbbs
    location /ws/id {
      proxy_pass http://hbbs:21118;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_read_timeout 120s;
    }

    # WebSocket to hbbr
    location /ws/relay {
      proxy_pass http://hbbr:21119;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_read_timeout 120s;
    }
  }
}

